{"version":3,"file":"index-519cd1a0.js","sources":["../../node_modules/phosphor-react/dist/icons/CircleNotch.esm.js","../../src/components/Button/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M232,128A104,104,0,1,1,84.7,33.4a8.1,8.1,0,0,1,10.6,4,8,8,0,0,1-4,10.6,88,88,0,1,0,73.4,0,8,8,0,0,1-4-10.6,8.1,8.1,0,0,1,10.6-4A104.4,104.4,0,0,1,232,128Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M168,40.7a96,96,0,1,1-80,0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar CircleNotch = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCircleNotch.displayName = \"CircleNotch\";\n\nexport default CircleNotch;\n//# sourceMappingURL=CircleNotch.esm.js.map\n","import { ButtonHTMLAttributes, ReactElement, ReactNode } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { clsx } from \"clsx\";\nimport { CircleNotch } from \"phosphor-react\";\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  children: ReactNode;\n  asChild?: boolean;\n  loading?: boolean;\n}\n\nexport interface LinkButtonProps {\n  icon: ReactElement;\n  label: string;\n  handleClick: () => void;\n  className?: string;\n}\n\nfunction ButtonRoot({ children, asChild, className, ...props }: ButtonProps) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      className={clsx(\"w-full rounded px-4 py-3 text-sm font-semibold ring-primary transition-colors hover:bg-secondary focus:ring-2\", className)}\n      {...props}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nButtonRoot.displayName = \"Button.Root\";\n\nfunction ButtonPrimary({ children, asChild, className, loading, ...props }: ButtonProps) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      className={clsx(\n        \"flex w-full justify-center rounded px-4 py-3 text-sm font-semibold text-gray-light \" +\n          \"bg-primary ring-primary transition-colors hover:bg-secondary focus:ring-2\",\n        { \"cursor-not-allowed bg-secondary\": loading === true },\n        className\n      )}\n      {...props}\n    >\n      {loading ? <CircleNotch size={24} className=\"animate-spin text-gray-light\" /> : children}\n    </Comp>\n  );\n}\n\nButtonPrimary.displayName = \"Button.Primary\";\n\nfunction ButtonSecondary({ children, asChild, className, ...props }: ButtonProps) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      className={clsx(\n        \"w-full rounded border-2 px-4 py-3 text-sm font-semibold text-primary \" +\n          \"bg-background-clearSoft ring-primary transition-colors hover:bg-background-clearLight\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nButtonSecondary.displayName = \"Button.Secondary\";\n\nfunction LinkButton({ icon, label, handleClick, className }: LinkButtonProps) {\n  return (\n    <div\n      className={clsx(\n        \"my-1 flex cursor-pointer items-center gap-2 rounded px-2 py-1 ring-primary transition-colors \" +\n          \"text-secondary hover:bg-background-clearSoft focus:ring-2\",\n        className\n      )}\n      onClick={handleClick}\n    >\n      <>{icon}</>\n      <span>{label}</span>\n    </div>\n  );\n}\n\nLinkButton.displayName = \"Button.Link\";\n\nexport const Button = {\n  Root: ButtonRoot,\n  Primary: ButtonPrimary,\n  Secondary: ButtonSecondary,\n  Link: LinkButton\n};\n"],"names":["pathsByWeight","color","React","renderPath","weight","renderPathForWeight","CircleNotch","forwardRef","props","ref","IconBase","CircleNotch$1","ButtonRoot","children","asChild","className","Comp","Slot","jsx","clsx","ButtonPrimary","loading","ButtonSecondary","LinkButton","icon","label","handleClick","jsxs","Fragment","Button"],"mappings":"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","x_google_ignoreList":[0]}